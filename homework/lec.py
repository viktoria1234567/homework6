#1.Дана последовательность чисел. 
# Получить список уникальных элементов заданной последовательности.

# list = [1, 2, 3, 5, 1, 5, 3, 10]

# def get_unic(my_list):
#     unic = []
#     for i in range(len(my_list)):
#         if my_list[i] not in my_list[i+1::] and my_list[i] not in my_list[:i-1:]:
#             unic.append(my_list[i])
#     return unic

# print(get_unic(list))

# Предложить улучшения кода для уже решённых задач

#2.Задайте последовательность чисел. 
# Напишите программу, которая выведет список неповторяющихся элементов исходной последовательности.

# lst = list(map(int, input("Введите числа через пробел:\n").split()))
# print(f"Исходный список: {lst}")
# new_lst = []
# [new_lst.append(i) for i in lst if i not in new_lst]
# print(f"Список из неповторяющихся элементов: {new_lst}")

# 3.Задайте список из вещественных чисел. 
# Напишите программу, которая найдёт разницу между максимальным и минимальным значением дробной части элементов.

# lst = [1.1, 1.2, 3.1, 5, 10.01]
# new_lst = [round(i % 1, 2) for i in lst if i % 1 != 0]
# print(max(new_lst) - min(new_lst))

# 4.Подсчитать сумму цифр в вещественном числе
# number = float(input("Введите вещественное число: "))
# new_sum = sum(map(int, str(number).replace('.', '')))
# print(f"Сумма цифр вещественного числа равна = {new_sum}")

# 5.Задать список из n чисел последовательности (1+1/n)^n и вывести на экран их сумму
# n = int(input("Введите число n: "))
# lst = [(1+1/i)**i for i in range(1,n+1)]
# print(f"Полученная сумма последовательности (1+1/n)^n равна {round(sum(lst),2)}")
